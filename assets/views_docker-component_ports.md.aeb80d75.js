import{_ as s,o as a,c as n,N as l}from"./chunks/framework.3a447488.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"views/docker-component/ports.md"}'),p={name:"views/docker-component/ports.md"},o=l(`<h4 id="ports" tabindex="-1">ports <a class="header-anchor" href="#ports" aria-label="Permalink to &quot;ports&quot;">​</a></h4><h5 id="ports和expose的区别" tabindex="-1">ports和expose的区别 <a class="header-anchor" href="#ports和expose的区别" aria-label="Permalink to &quot;ports和expose的区别&quot;">​</a></h5><p>简单说就是ports用来把服务端口映射给宿主机，可以访问宿主机IP地址的人都可以访问ports映射出来的端口。</p><p>而expose用来把服务端口开放给其他服务，客户端服务可以通过links功能访问服务端服务的端口。</p><h5 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h5><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">nginx</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ngxin:1.2</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#C3E88D;">宿主机端口</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">:{docker服务容器端口}</span></span>
<span class="line"></span></code></pre></div><h5 id="_1-映射到端口" tabindex="-1">1. 映射到端口 <a class="header-anchor" href="#_1-映射到端口" aria-label="Permalink to &quot;1. 映射到端口&quot;">​</a></h5><p>使用下面的参数可以将服务的80端口映射宿主机的8080端口（也可以是其他端口）</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">nginx</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tflinux_nginx1.20</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">8080:80</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-映射到地址" tabindex="-1">2. 映射到地址 <a class="header-anchor" href="#_2-映射到地址" aria-label="Permalink to &quot;2. 映射到地址&quot;">​</a></h5><p>使用下面的参数可以将服务的80端口映射到宿主机的10.16.1.1的8080端口（也可以是其他端口）。</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">nginx</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tflinux_nginx1.20</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10.16.1.1:8080:80</span></span>
<span class="line"></span></code></pre></div><h5 id="_3-随机映射" tabindex="-1">3.随机映射 <a class="header-anchor" href="#_3-随机映射" aria-label="Permalink to &quot;3.随机映射&quot;">​</a></h5><p>使用下面的参数可以将服务的80端口映射到宿主机的一个随机的端口上。</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">nginx</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tflinux_nginx1.20</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span></span>
<span class="line"></span></code></pre></div>`,15),e=[o];function t(c,r,i,y,D,C){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{d as __pageData,A as default};
